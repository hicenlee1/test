package jksj.concurrent.shua2;

/**
 * 并发编程中需要注意的问题分为3点：
 * 1. 安全性
 *    多个线程存在共享数据的情况下，可能会存在安全性问题
 *    竞态条件: 程序的执行结果，依赖线程执行顺序
 *    解决方案：锁
 * 2. 活跃性
 *
 *    死锁：破坏四个条件之一
 *         1. 互斥
 *         2. 占有且等待
 *         3. 不可抢占
 *         4. 循环依赖
 *    活锁：等待一个随机时间
 *    饥饿：1. 保证资源充足
 *         2. 公平分配资源 （常用）
 *         3. 避免持有锁的线程长时间执行
 * 3. 性能
 *     指标：
 *     吞吐量
 *     延迟
 *     并发量
 *
 *     1. 使用无锁方案，如：TLS(Thred local storage), COW (COPY-ON-WIRTE)
 *     2. 减少锁的持有时间， 如ConcurrentHashMap
 */
public class Chapter7 {
}
